{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "ddr",
    "Parameters": {
        "KeyName": {
            "Default": "sshvans",
            "Description": "EC2 key name",
            "Type": "String"
        },
        "VPCID": {
            "Description": "VPC ID",
            "Type": "AWS::EC2::VPC::Id"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "Must be a valid IP range in x.x.x.x/x notation",
            "Description": "The CIDR IP range that is permitted to access DDR instances.",
            "Type": "String"
        },
        "ImagesTableName": {
            "Default": "ddr_images",
            "Description": "Images DDR dynamodb table",
            "Type": "String"
        },
        "ScoreTableName": {
            "Default": "ddr_score",
            "Description": "Scores DDR dynamodb table",
            "Type": "String"
        },
        "RenderedTableName": {
            "Default": "ddr_rendered",
            "Description": "Rendered DDR dynamodb table",
            "Type": "String"
        },
        "ProcessedTableName": {
            "Default": "ddr_processed",
            "Description": "DDR dynamodb table storing processed images and rekognition output",
            "Type": "String"
        },
        "ArtifactBucket": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "Description": "S3 bucket containing the templates and other artifacts to deploy the stack. It can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "ddr-assets",
            "Type": "String"
        },
        "ArtifactKeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "Description": "S3 object key prefix. It can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "",
            "Type": "String"
        }
    },
    "Rules": {
        "RekognitionRegionRule": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Contains": [
                            [
                                "us-east-1",
                                "us-west-2",
                                "eu-west-1"
                            ],
                            {
                                "Ref": "AWS::Region"
                            }
                        ]
                    },
                    "AssertDescription": "This Quick Start utilizes Amazon Rekognition which is only available in the US East (N. Virginia), US West (Oregon) and EU (Ireland) regions. Please launch the stack in one of these regions"
                }
            ]
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "UBUNTUDDR": "ubuntu-ddr-ami"
            },
            "us-west-1": {
                "UBUNTUDDR": "ami-3b162a5b"
            },
            "us-west-2": {
                "UBUNTUDDR": "ami-3c2ae444"
            },
            "us-east-2": {
                "UBUNTUDDR": "ami-3e624d5b"
            },
            "us-east-1": {
                "UBUNTUDDR": "ami-a90fafd3"
            }
        }
    },
    "Resources": {
        "DdrInstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "DdrS3DynamodbAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "Stmt1503202769000",
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:*"
                                    ],
                                    "Resource": [
                                        { "Fn::Sub": "arn:aws:s3:::${S3DdrResources}" },
                                        { "Fn::Sub": "arn:aws:s3:::${S3DdrResources}/*" },
                                        { "Fn::Sub": "arn:aws:s3:::${S3DdrWebapp}" },
                                        { "Fn::Sub": "arn:aws:s3:::${S3DdrWebapp}/*" }
                                    ]
                                },
                                {
                                    "Sid": "Stmt1503202814000",
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:CreateTable",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:GetItem",
                                        "dynamodb:ListTables",
                                        "dynamodb:PutItem",
                                        "dynamodb:Query",
                                        "dynamodb:Scan"
                                    ],
                                    "Resource": [
                                        { "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DdrScoreTable}" },
                                        { "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DdrImagesTable}" },
                                        { "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DdrRenderedTable}" },
                                        { "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DdrProcessedTable}" }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "DdrSQSAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "Stmt1503202925000",
                                    "Effect": "Allow",
                                    "Action": [
                                        "sqs:DeleteMessage",
                                        "sqs:DeleteMessageBatch",
                                        "sqs:ListQueues",
                                        "sqs:ReceiveMessage"
                                    ],
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "DdrMessagesQueue",
                                            "Arn"
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "DdrRekognitionAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "rekognition:*"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    },
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "cloudformation:DescribeStacks"
                                    ],
                                    "Resource": [
                                        {
                                            "Ref": "AWS::StackId"
                                        }
                                    ],
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "ec2:DescribeInstances"
                                    ],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": [
                                        "lambda:AddPermission"
                                    ],
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "DDRS3RenderedEventFunction",
                                            "Arn"
                                        ]
                                    },
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "ec2-policy"
                    }
                ]
            }
        },
        "DdrLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": ["lambda.amazonaws.com"]
                        },
                        "Action": ["sts:AssumeRole"]
                    }]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "DdrS3DynamodbAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:DeleteItem",
                                        "dynamodb:GetItem",
                                        "dynamodb:PutItem",
                                        "dynamodb:Scan",
                                        "dynamodb:Query",
                                        "dynamodb:UpdateItem"
                                    ],
                                    "Resource": [
                                        { "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DdrScoreTable}" },
                                        { "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DdrImagesTable}" },
                                        { "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DdrRenderedTable}" },
                                        { "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DdrProcessedTable}" }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "DdrInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "DdrInstanceRole"
                    }
                ]
            }
        },
        "DDRScoreInstance": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": ["DefaultSG", "DdrSG"],
            "Metadata": {
                "HostRole": "DDR Renderer",
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/tmp/ddr_config.props": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "ddr_score_table: ",
                                            {
                                                "Ref": "ScoreTableName"
                                            },
                                            "\n",
                                            "ddr_images_table: ",
                                            {
                                                "Ref": "ImagesTableName"
                                            },
                                            "\n",
                                            "ddr_processed_table: ",
                                            {
                                                "Ref": "ProcessedTableName"
                                            },
                                            "\n",
                                            "ddr_rendered_table: ",
                                            {
                                                "Ref": "RenderedTableName"
                                            },
                                            "\n",
                                            "s3_bucket: ",
                                            {
                                                "Ref": "S3DdrResources"
                                            },
                                            "\n",
                                            "s3_webapp_bucket: ",
                                            {
                                                "Ref": "S3DdrWebapp"
                                            },
                                            "\n",
                                            "s3_bucket_region: ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n",
                                            "sqs_url: ",
                                            {
                                                "Ref": "DdrMessagesQueue"
                                            },
                                            "\n",
                                            "api_url: ",
                                            "https://",
                                            {
                                                "Ref": "DDRApi"
                                            },
                                            ".execute-api.",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            ".amazonaws.com/prod",
                                            "\n",
                                            "num_op_servers: 1",
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000666",
                                "owner": "root",
                                "group": "root"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "UBUNTUDDR"
                    ]
                },
                "InstanceType": "p2.xlarge",
                "KeyName": {
                    "Ref": "KeyName"
                },
                "IamInstanceProfile": {
                    "Ref": "DdrInstanceProfile"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "DdrSG"
                    },
                    {
                        "Ref": "DefaultSG"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ddr-scorer"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "export PATH=$PATH:/usr/local/bin\n",
                                "which pip &> /dev/null\n",
                                "if [ $? -ne 0 ] ; then\n",
                                "    echo \"PIP NOT INSTALLED\"\n",
                                "    [ `which yum` ] && $(yum install -y epel-release; yum install -y python-pip) && echo \"PIP INSTALLED\"\n",
                                "    [ `which apt-get` ] && apt-get -y update && apt-get -y install python-pip && echo \"PIP INSTALLED\"\n",
                                "fi\n",
                                "pip install --upgrade pip &> /dev/null\n",
                                "pip install awscli --ignore-installed six &> /dev/null\n",
                                "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                                "cfn-init -v --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource DDRScoreInstance ",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "cfn-signal -e $? --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource DDRScoreInstance --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "DdrSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupName": "ddr-secgroup",
                "GroupDescription": "ddr-secgroup",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ddr-secgroup"
                    }
                ]
            }
        },
        "DefaultSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "default VPC security group",
                "VpcId": {
                    "Ref": "VPCID"
                }
            }
        },
        "DefaultSGIngress": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "DefaultSG"
                },
                "IpProtocol": "-1",
                "SourceSecurityGroupId": {
                    "Ref": "DefaultSG"
                }
            }
        },
        "DdrImagesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Ref": "ImagesTableName"
                },
                "AttributeDefinitions": [
                    {
                        "AttributeName": "file_id",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "file_ts",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "file_id",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "file_ts",
                        "KeyType": "RANGE"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "10",
                    "WriteCapacityUnits": "10"
                },
                "TimeToLiveSpecification": {
                    "AttributeName": "ttl",
                    "Enabled": "TRUE"
                }
            }
        },
        "DdrProcessedTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Ref": "ProcessedTableName"
                },
                "AttributeDefinitions": [
                    {
                        "AttributeName": "file_id",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "file_ts",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "file_id",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "file_ts",
                        "KeyType": "RANGE"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "10",
                    "WriteCapacityUnits": "10"
                },
                "TimeToLiveSpecification": {
                    "AttributeName": "ttl",
                    "Enabled": "TRUE"
                }
            }
        },
        "DdrRenderedTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Ref": "RenderedTableName"
                },
                "AttributeDefinitions": [
                    {
                        "AttributeName": "file_id",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "file_ts",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "file_id",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "file_ts",
                        "KeyType": "RANGE"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "10",
                    "WriteCapacityUnits": "10"
                },
                "TimeToLiveSpecification": {
                    "AttributeName": "ttl",
                    "Enabled": "TRUE"
                }
            }
        },
        "DdrScoreTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Ref": "ScoreTableName"
                },
                "AttributeDefinitions": [
                    {
                        "AttributeName": "score_id",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "score_ts",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "score_id",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "score_ts",
                        "KeyType": "RANGE"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "10",
                    "WriteCapacityUnits": "10"
                },
                "TimeToLiveSpecification": {
                    "AttributeName": "ttl",
                    "Enabled": "TRUE"
                }
            }
        },
        "DDRS3RenderedEventFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ArtifactBucket"
                    },
                    "S3Key": {
                        "Fn::Sub": "${ArtifactKeyPrefix}assets/DDRS3RenderedEvent.zip"
                    }
                },
                "Handler": "DDRS3RenderedEvent.lambda_handler",
                "Runtime": "python3.6",
                "Timeout": "15",
                "Role": {
                    "Fn::GetAtt": [
                        "DdrLambdaRole",
                        "Arn"
                    ]
                }
            }
        },
        "GetDanceScoreFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ArtifactBucket"
                    },
                    "S3Key": {
                        "Fn::Sub": "${ArtifactKeyPrefix}assets/DDRScoreFetch.zip"
                    }
                },
                "Handler": "DDRScoreFetch.get_score",
                "Runtime": "python3.6",
                "Timeout": "15",
                "Role": {
                    "Fn::GetAtt": [
                        "DdrLambdaRole",
                        "Arn"
                    ]
                }
            }
        },
        "GetDanceImageFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "ArtifactBucket"
                    },
                    "S3Key": {
                        "Fn::Sub": "${ArtifactKeyPrefix}assets/DDRImageFetch.zip"
                    }
                },
                "Handler": "DDRImageFetch.get_image",
                "Runtime": "python3.6",
                "Timeout": "15",
                "Role": {
                    "Fn::GetAtt": [
                        "DdrLambdaRole",
                        "Arn"
                    ]
                }
            }
        },
        "S3DdrResources": {
            "Type": "AWS::S3::Bucket",
            "DependsOn": "DDRS3RenderedEventFunction",
            "Properties": {
                "AccessControl": "Private",
                "LifecycleConfiguration": {
                    "Rules": [
                        {
                            "ExpirationInDays": "1",
                            "Id": "Expire Old Objects",
                            "Status": "Enabled"
                        }
                    ]
                },
                "VersioningConfiguration": {
                    "Status": "Suspended"
                },
                "NotificationConfiguration": {
                    "QueueConfigurations": [
                        {
                            "Event": "s3:ObjectCreated:Put",
                            "Filter": {
                                "S3Key": {
                                    "Rules": [
                                        {
                                            "Name": "prefix",
                                            "Value": "images/"
                                        }
                                    ]
                                }
                            },
                            "Queue": {
                                "Fn::GetAtt": [
                                    "DdrMessagesQueue",
                                    "Arn"
                                ]
                            }
                        }
                    ]
                }
            }
        },
        "S3DdrWebapp": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "WebsiteConfiguration": {
                    "IndexDocument": "slideshow.html",
                    "ErrorDocument": "slideshow.html"
                },
                "AccessControl": "Private",
                "VersioningConfiguration": {
                    "Status": "Suspended"
                }
            }
        },
        "DdrMessagesQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "DelaySeconds": "0",
                "MaximumMessageSize": "262144",
                "MessageRetentionPeriod": "345600",
                "ReceiveMessageWaitTimeSeconds": "0",
                "VisibilityTimeout": "0"
            }
        },
        "SqsPolicyDdrMessages": {
            "Type": "AWS::SQS::QueuePolicy",
            "Properties": {
                "Queues": [
                    {
                        "Ref": "DdrMessagesQueue"
                    }
                ],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Id": "Ddr SQSDefaultPolicy",
                    "Statement": [
                        {
                            "Sid": "AllowS3Access",
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action": "SQS:SendMessage",
                            "Resource": {
                                "Fn::GetAtt": [
                                    "DdrMessagesQueue",
                                    "Arn"
                                ]
                            },
                            "Condition": {
                                "ArnLike": {
                                    "aws:SourceArn": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:s3:*:*:*ddrresources*"
                                            ]
                                        ]
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        "S3PolicyDdrResources": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "Bucket": {
                    "Ref": "S3DdrResources"
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Id": "http referer policy example",
                    "Statement": [
                        {
                            "Sid": "Allow get requests originating from ddr-s3-webapp",
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action": "s3:GetObject",
                            "Resource": {
                                "Fn::Sub": "arn:aws:s3:::${S3DdrResources}/rendered/*"
                            }
                        }
                    ]
                }
            }
        },
        "S3PolicyDdrWebapp": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "Bucket": {
                    "Ref": "S3DdrWebapp"
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "PublicReadGetObject",
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action": "s3:GetObject",
                            "Resource": {
                                "Fn::Sub": "arn:aws:s3:::${S3DdrWebapp}/*"
                            }
                        }
                    ]
                }
            }
        },
        "DDRApi": {
            "Type" : "AWS::ApiGateway::RestApi",
            "Properties" : {
                "Description": "Api used to get dance score from dynamodb table",
                "FailOnWarnings": true,
                "Name": "Get Dance Score Api"
            }
        },
        "GetScoreFunctionLambdaPermission": {
            "Type" : "AWS::Lambda::Permission",
            "DependsOn" : "GetDanceScoreFunction",
            "Properties" : {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {"Fn::GetAtt": ["GetDanceScoreFunction", "Arn"]},
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {"Fn::Join": ["",
                    ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "DDRApi"}, "/*"]
                ]}
            }
        },
        "GetImageFunctionLambdaPermission": {
            "DependsOn": "GetDanceImageFunction",
            "Type" : "AWS::Lambda::Permission",
            "Properties" : {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {"Fn::GetAtt": ["GetDanceImageFunction", "Arn"]},
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {"Fn::Join": ["",
                    ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "DDRApi"}, "/*"]
                ]}
            }
        },
        "DDRApiStage": {
            "DependsOn" : ["ApiGatewayAccount"],
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {"Ref": "ApiDeployment"},
                "MethodSettings": [{
                    "DataTraceEnabled": true,
                    "HttpMethod": "*",
                    "LoggingLevel": "INFO",
                    "ResourcePath": "/*"
                }],
                "RestApiId": {"Ref": "DDRApi"},
                "StageName": "prod"
            }
        },
        "ApiGatewayCloudWatchLogsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": { "Service": ["apigateway.amazonaws.com"] },
                        "Action": ["sts:AssumeRole"]
                    }]
                },
                "Policies": [{
                    "PolicyName": "ApiGatewayLogsPolicy",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [{
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:DescribeLogGroups",
                                "logs:DescribeLogStreams",
                                "logs:PutLogEvents",
                                "logs:GetLogEvents",
                                "logs:FilterLogEvents"
                            ],
                            "Resource": "*"
                        }]
                    }
                }]
            }
        },
        "ApiGatewayAccount": {
            "Type" : "AWS::ApiGateway::Account",
            "Properties" : {
                "CloudWatchRoleArn" : {"Fn::GetAtt" : ["ApiGatewayCloudWatchLogsRole", "Arn"] }
            }
        },
        "ApiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": ["GetScoreRequest"],
            "Properties": {
                "RestApiId": {"Ref": "DDRApi"},
                "StageName": "DummyStage"
            }
        },
        "ScoreResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {"Ref": "DDRApi"},
                "ParentId": {"Fn::GetAtt": ["DDRApi", "RootResourceId"]},
                "PathPart": "score"
            }
        },
        "ImageResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {"Ref": "DDRApi"},
                "ParentId": {"Fn::GetAtt": ["DDRApi", "RootResourceId"]},
                "PathPart": "image"
            }
        },
        "GetScoreRequest": {
            "DependsOn": "GetScoreFunctionLambdaPermission",
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "ResourceId": {"Ref": "ScoreResource"},
                "RestApiId": {"Ref": "DDRApi"},
                "AuthorizationType": "NONE",
                "HttpMethod": "GET",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {"Fn::Join" : ["",
                        ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["GetDanceScoreFunction", "Arn"]}, "/invocations"]
                    ]},
                    "IntegrationResponses": [{
                        "ResponseTemplates": {
                            "application/json": ""
                        },
                        "StatusCode": 200
                    }],
                    "PassthroughBehavior": "WHEN_NO_MATCH"
                },
                "MethodResponses": [{
                    "ResponseModels": {
                        "application/json": "Empty"
                    },
                    "StatusCode": 200
                }]
            }
        },
        "ScoreOptionsMethod": {
            "DependsOn": "GetScoreFunctionLambdaPermission",
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "ResourceId": {"Ref": "ScoreResource"},
                "RestApiId": {"Ref": "DDRApi"},
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "Integration": {
                    "Type": "MOCK",
                    "CacheNamespace": {"Ref": "ScoreResource"},
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\": 200}"
                    },
                    "IntegrationResponses": [{
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
                        },
                        "ResponseTemplates": {
                            "application/json": ""
                        },
                        "StatusCode": 200
                    }],
                    "PassthroughBehavior": "WHEN_NO_MATCH"
                },
                "MethodResponses": [{
                    "ResponseModels": {
                        "application/json": "Empty"
                    },
                    "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": false,
                        "method.response.header.Access-Control-Allow-Methods": false,
                        "method.response.header.Access-Control-Allow-Headers": false
                    },
                    "StatusCode": 200
                }]
            }
        },
        "GetImageRequest": {
            "DependsOn": "GetScoreFunctionLambdaPermission",
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "ResourceId": {"Ref": "ImageResource"},
                "RestApiId": {"Ref": "DDRApi"},
                "AuthorizationType": "NONE",
                "HttpMethod": "GET",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {"Fn::Join" : ["",
                        ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["GetDanceImageFunction", "Arn"]}, "/invocations"]
                    ]},
                    "IntegrationResponses": [{
                        "ResponseTemplates": {
                            "application/json": ""
                        },
                        "StatusCode": 200
                    }],
                    "PassthroughBehavior": "WHEN_NO_MATCH"
                },
                "MethodResponses": [{
                    "ResponseModels": {
                        "application/json": "Empty"
                    },
                    "StatusCode": 200
                }]
            }
        },
        "ImageOptionsMethod": {
            "DependsOn": "GetScoreFunctionLambdaPermission",
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "ResourceId": {"Ref": "ImageResource"},
                "RestApiId": {"Ref": "DDRApi"},
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "Integration": {
                    "Type": "MOCK",
                    "CacheNamespace": {"Ref": "ImageResource"},
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\": 200}"
                    },
                    "IntegrationResponses": [{
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": "'*'",
                            "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
                        },
                        "ResponseTemplates": {
                            "application/json": ""
                        },
                        "StatusCode": 200
                    }],
                    "PassthroughBehavior": "WHEN_NO_MATCH"
                },
                "MethodResponses": [{
                    "ResponseModels": {
                        "application/json": "Empty"
                    },
                    "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": false,
                        "method.response.header.Access-Control-Allow-Methods": false,
                        "method.response.header.Access-Control-Allow-Headers": false
                    },
                    "StatusCode": 200
                }]
            }
        },
        "DdrRasPiUser": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "Policies": [
                    {
                        "PolicyName": "DdrRaspiPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:*"
                                    ],
                                    "Resource": [
                                        { "Fn::Sub": "arn:aws:s3:::${S3DdrResources}" },
                                        { "Fn::Sub": "arn:aws:s3:::${S3DdrResources}/*" }
                                    ],
                                    "Effect": "Allow",
                                    "Sid": "S3Access"
                                },
                                {
                                    "Sid": "DynamoImagesAccess",
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:CreateTable",
                                        "dynamodb:DescribeTable",
                                        "dynamodb:GetItem",
                                        "dynamodb:ListTables",
                                        "dynamodb:PutItem",
                                        "dynamodb:Query",
                                        "dynamodb:Scan"
                                    ],
                                    "Resource": [
                                        { "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DdrImagesTable}" }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "DDRScoreInstanceId": {
            "Value": {
                "Ref": "DDRScoreInstance"
            }
        },
        "DdrImagesTable": {
            "Value": {
                "Ref": "DdrImagesTable"
            }
        },
        "DdrScoreTable": {
            "Value": {
                "Ref": "DdrScoreTable"
            }
        },
        "DdrRenderedTable": {
            "Value": {
                "Ref": "DdrRenderedTable"
            }
        },
        "DdrMessagesQueue": {
            "Value": {
                "Ref": "DdrMessagesQueue"
            }
        },
        "DdrMessagesQueueARN": {
            "Value": {
                "Fn::GetAtt": [
                    "DdrMessagesQueue",
                    "Arn"
                ]
            }
        },
        "DdrS3RenderedFunctionARN": {
            "Value": {
                "Fn::GetAtt": [
                    "DDRS3RenderedEventFunction",
                    "Arn"
                ]
            }
        },
        "GetDanceScoreFunctionARN": {
            "Value": {
                "Fn::GetAtt": [
                    "GetDanceScoreFunction",
                    "Arn"
                ]
            }
        },
        "GetDanceImageFunctionARN": {
            "Value": {
                "Fn::GetAtt": [
                    "GetDanceImageFunction",
                    "Arn"
                ]
            }
        },
        "DdrEC2PublicIp": {
            "Value": {
                "Fn::GetAtt": [
                    "DDRScoreInstance",
                    "PublicIp"
                ]
            }
        },
        "DdrApi": {
            "Value": {
                "Ref": "DDRApi"
            }
        },
        "S3DdrResources": {
            "Value": {
                "Ref": "S3DdrResources"
            }
        },
        "S3DdrWebapp": {
            "Value": {
                "Ref": "S3DdrWebapp"
            }
        },
        "User": {
            "Value": {
                "Ref": "DdrRasPiUser"
            }
        }
    }
}